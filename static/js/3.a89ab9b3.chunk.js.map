{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Dialogs/DialogItem/DialogItem.module.css","Components/Dialogs/Message/Message.module.css","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","style","dialogs","dialog","active","to","name","Message","message","maxLength30","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","textArea","Field","component","InputType","placeholder","validate","required","allButton","Dialogs","dialogsElements","map","d","key","messagesElements","messages","m","content","value","addMessage","newMessageText","DialogsContainer","this","updateNewMessageText","React","Component","compose","connect","state","dialogsPage","isAuth","auth","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,yBAAyB,SAAW,0BAA0B,SAAW,4B,oBCAxID,EAAOC,QAAU,CAAC,OAAS,6B,oBCA3BD,EAAOC,QAAU,CAAC,OAAS,0B,wICcZC,EAXI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAWC,IAAMC,SAClB,yBAAKF,UAAWC,IAAME,OAAS,IAAMF,IAAMG,QAC3C,kBAAC,IAAD,CAASC,GAAIP,GAAOD,EAAMS,S,kBCEvBC,EARC,SAACV,GACb,OACI,6BACI,yBAAKG,UAAWC,IAAME,QAASN,EAAMW,W,0CC4B3CC,EAAcC,YAAiB,IAgB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAdL,SAACf,GACpB,OACI,0BAAMiB,SAAUjB,EAAMkB,cAClB,yBAAKf,UAAWC,IAAMe,UAClB,kBAACC,EAAA,EAAD,CAAOX,KAAM,iBAAkBY,UAAWC,IAAWC,YAAa,0BAC3DC,SAAU,CAACC,IAAUb,MAEhC,6BACKc,YAAU,qBAQZC,EA3CC,SAAC3B,GAEb,IAAI4B,EAAkB5B,EAAMK,QAAQwB,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMP,GAAI4B,EAAE5B,GAAI6B,IAAKD,EAAE5B,QACpF8B,EAAmBhC,EAAMiC,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASvB,QAASuB,EAAED,SAAUF,IAAKG,EAAEhC,QAMpF,OACI,yBAAKC,UAAWC,IAAM+B,SAClB,yBAAKhC,UAAWC,IAAMC,SACjBuB,GAEL,yBAAKzB,UAAWC,IAAM6B,UACjBD,EACD,kBAAClB,EAAD,CAAqBG,SAXb,SAACmB,GACjBpC,EAAMqC,WAAWD,EAAME,oBAYnB,gC,iCCpBNC,E,uKAEC,OAAO,6BACF,kBAAC,EAAD,CAASlC,QAASmC,KAAKxC,MAAMK,QACpB4B,SAAUO,KAAKxC,MAAMiC,SACrBK,eAAgBE,KAAKxC,MAAMsC,eAC3BD,WAAYG,KAAKxC,MAAMqC,WACvBI,qBAAsBD,KAAKxC,MAAMyC,4B,GAPvBC,IAAMC,WAmBtBC,sBACXC,aARkB,SAACC,GAAD,MAAY,CAC9BzC,QAASyC,EAAMC,YAAY1C,QAC3B4B,SAAUa,EAAMC,YAAYd,SAC5BK,eAAgBQ,EAAMC,YAAYT,eAClCU,OAAQF,EAAMG,KAAKD,UAIM,CAACX,iBAC1Ba,IAFWN,CAGbL","file":"static/js/3.a89ab9b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Dialogs_content__MewNd\",\"dialogs\":\"Dialogs_dialogs__1dXFH\",\"messages\":\"Dialogs_messages__1ZIch\",\"textArea\":\"Dialogs_textArea__39Dxu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3Xulf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Message_dialog__1nyTi\"};","import React from \"react\";\r\nimport style from \"./DialogItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return(\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialog + ' ' + style.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;\r\n\r\n","import React from \"react\";\r\nimport style from \"./Message.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return(\r\n        <div>\r\n            <div className={style.dialog}>{props.message}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport style from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {InputType} from \"../Common/FormsControls/FormsControls\";\r\nimport {allButton} from \"../../hoc/button/Button\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id}/>)\r\n    let messagesElements = props.messages.map(m => <Message message={m.messages} key={m.id}/>)\r\n\r\n    let addNewMessage = (value) => {\r\n        props.addMessage(value.newMessageText)\r\n    }\r\n\r\n    return (\r\n        <div className={style.content}>\r\n            <div className={style.dialogs}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={style.messages}>\r\n                {messagesElements}\r\n                <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={style.textArea}>\r\n                <Field name={'newMessageText'} component={InputType} placeholder={'Please add your message'}\r\n                       validate={[required, maxLength30]}/>\r\n            </div>\r\n            <div>\r\n                {allButton('Send Message')}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {addMessage} from \"../../redux/dialogs-reducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass DialogsContainer extends React.Component {\r\n    render() {\r\n       return <div>\r\n            <Dialogs dialogs={this.props.dialogs}\r\n                     messages={this.props.messages}\r\n                     newMessageText={this.props.newMessageText}\r\n                     addMessage={this.props.addMessage}\r\n                     updateNewMessageText={this.props.updateNewMessageText}/>\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    dialogs: state.dialogsPage.dialogs,\r\n    messages: state.dialogsPage.messages,\r\n    newMessageText: state.dialogsPage.newMessageText,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addMessage}),\r\n    withAuthRedirect\r\n)(DialogsContainer)"],"sourceRoot":""}